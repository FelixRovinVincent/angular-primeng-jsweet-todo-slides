= Modern Web Apps with HTML5 Web Components and Polymer, Java EE MVC and JAX-RS
Kito Mann (@kito99), Virtua, Inc.
:backend: revealjs
:source-highlighter: highlight.js 
:revealjs_history: true
:figure-caption!:

:imagesdir: images
:server-url: 127.0.0.1:8000/
:custom-elements-src-dir: 

:element1-demo: {server-url}/simple-counter-demo.html
:element1-demo-src: {custom-elements-src-dir}/src/simple-counter.js
:element1-src: {custom-elements-src-dir}/src/simple-counter.js

:element2-demo: {server-url}/deluxe-counter-demo.html
:element2-demo-src: {custom-elements-src-dir}/deluxe-counter-demo.html
:element2-src: {custom-elements-src-dir}/src/deluxe-counter.js		

:putting-it-all-together-demo: {server-url}/labs/putting-it-all-together/deluxe-counter-demo.html

:examples-dir: examples

:shadom-dom-simple-src: {examples-dir}/shadow-dom-simple.html
:shadom-dom-simple-projection-src: {examples-dir}/shadow-dom-simple-projection.html
:shadom-dom-projection-src: {examples-dir}/shadow-dom-projection.html

:vanilla-js-src: {examples-dir}/hello-world-vanilla-js.html

:polymer-src: {examples-dir}/seed-element-polymer.html

:template-simple-src: {examples-dir}/template-simple.html

== Kito D. Mann (@kito99)
[%step]
* Principal Consultant at Virtua (http://www.virtua.com)
* Training, consulting, architecture, mentoring
** PrimeFaces, JSF, Java EE, Web Components, Polymer, Liferay, etc.
* Official US PrimeFaces partner
* Author, JavaServer Faces in Action
* Founder, JSF Central (http://www.jsfcentral.com)

== Kito D. Mann (@kito99)
[%step]
* Co-host, Enterprise Java Newscast (http://enterprisejavanews.com)
* New site: http://knowesis.io
* Internationally recognized speaker
** JavaOne, JavaZone, Devoxx, Devnexus, NFJS, etc.
* JCP Member
** JSF, MVC, JSF Portlet Bridge, Portlets 

== MVC
[%step]
* New https://www.jcp.org/en/jsr/detail?id=371[JSR (371)^] for Java EE 8
* Action-based server-side framework like Spring MVC
* Based on community feedback
* Current release: EDR2
* Java EE 8 scheduled for first half of 2017

== MVC and JSF?
[%step]
* MVC will sit alongside with JSF in Java EE (_not_ a replacement) 

== MVC and JSF?
.Component-based frameworks (image from Ed Burns: http://www.oracle.com/technetwork/articles/java/mvc-2280472.html[Why Another MVC?^])
image::jsf-component-framework.png[Component Frameworks, 859, 392]

== MVC and JSF?
.Action-based frameworks (image from Ed Burns: http://www.oracle.com/technetwork/articles/java/mvc-2280472.html[Why Another MVC?^])
image::jsf-action-framework.png[Action Frameworks, 859, 392]

== MVC
[%step]
* Built on top of JAX-RS
* Controllers must use CDI
* Controllers can be in request scope
* Allows you to handle errors inside of Controllers instead of globally like JAX-RS

== MVC
[%step]
* Bring your own template engine!   
* Built-in support for CSRF protection
* Support for encoding to avoid XSS attacks

== What about UI Components?

== UI Components are Everywhere
image::page-with-components.png[]

== UI Components are Everywhere
image::page-with-components-annotated.png[]

== UI Components are Everywhere
[%step]
* Component models have been popular since the early ninenties
** Visual Basic
** Delphi
** PowerBuilder

** WinForms
** Windows Presentaiton Framework
** ASP.NET

** Swing
** JavaFX
** JavaServer Faces
** Tapestry

== UI Components are Everywhere
[%step]
* In the browser, component suites must invent their own models:
** YUI
** KendoUI
** Bootstrap
** jQuery UI
** Wijmo
** PrimeUI
** Infragistics

== Why do We Build Components?
[%step]
* Reusable UI functionality
** Within a single application
** Across multiple applications
* You can focus on the core application functionality

== HTML Markup Doesn't Support Non-Native Components
image::page-with-components-source.png[]

== We Work with Abstractions
[%step]
* Programming model may be componentized, but native markup is not

== We Work with Abstractions
PrimeFaces (JavaServer Faces) DataTable
[source, language="html", indent=0]
----
<p:dataTable var="car" value="#{dtPaginatorView.cars}" rows="10"
                     paginator="true"
                     paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                     rowsPerPageTemplate="5,10,15">
    <p:column headerText="Id">
        <h:outputText value="#{car.id}" />
    </p:column>

    <p:column headerText="Year">
        <h:outputText value="#{car.year}" />
    </p:column>

    <p:column headerText="Brand">
        <h:outputText value="#{car.brand}" />
    </p:column>

    <p:column headerText="Color">
        <h:outputText value="#{car.color}" />
    </p:column>
</p:dataTable>
----

== We Work with Abstractions
Bootstrap Dropdowns
[source, language="html", indent=0]
----
<div class="dropdown">
  <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
    Dropdown
    <span class="caret"></span>
  </button>
  <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action</a></li>
    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Another action</a></li>
    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Something else here</a></li>
    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Separated link</a></li>
  </ul>
</div>
----

== We Work with Abstractions
jQuery UI Tabs
[source, language="html", indent=0]
----
<div id="tabs">
  <ul>
    <li><a href="#tabs-1">Nunc tincidunt</a></li>
    <li><a href="#tabs-2">Proin dolor</a></li>
    <li><a href="#tabs-3">Aenean lacinia</a></li>
  </ul>
  <div id="tabs-1">
    ...
  </div>
  <div id="tabs-2">
 	...
  </div>
  <div id="tabs-3">
	...
</div>
----

== What is a Web Component?
[%step]
* _Web components bring a native component model to HTML_

== What is a Web Component?

image::polymer-paper-example1.png[]

== What is a Web Component?

[source, language="html"]
----
<paper-action-dialog backdrop autoCloseDisabled layered="false">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>

  <paper-button affirmative autofocus>Tap me to close</paper-button>
</paper-action-dialog>
----

== Web Components == Collection of HTML5 Standards
[%step]
* Custom Elements
* HTML Templates
* HTML Imports
* Shadow DOM
** (Custom CSS Properties)

== Custom Elements

[NOTE.speaker]
--
Show counter and source and inspect element in DOM
--
http://{element2-demo}[demo^]

== Web Components in the Wild
[%step]
* Web Components Toolkits
** https://www.polymer-project.org[Polymer^]
** http://x-tag.github.io/[X-Tag^]
* Component Suites
** https://elements.polymer-project.org/[Polymer Element Catalog^]
** http://bosonic.github.io/Bosonic[Bosonic^]
** http://www.primefaces.org/primeui/#primeelements[Prime Elements^]
** https://mediamath.github.io/strand/[Strand Web Components^]

== Web Components in the Wild
[%step]
* Directories
** http://customelements.io
** http://component.kitchen

== What is Poylmer?

image::webcomponents-stack.svg[]

== Polymer
[%step]
* Library for building web components
* Extensive feature set
** Simplified programming model
** Two-way data binding
** Declarative event handling
** Behaviors (mixins)
** Property observation
* Also hosts extensive sets of web components
* Extensive set of tools
** Build, testing, designer, etc.

== Polymer
[%step]
* Developed by and used internally by Google
* Over 300 Google Projects (including http://gaming.youtube.com)
* Over 150,000 public facing "web pages"
* Used internally for parts of Chrome
* Heavily promoted (https://www.polymer-project.org/summit[Polymer Summit^], https://www.youtube.com/playlist?list=PLOU2XLYxmsII5c3Mgw6fNYCzaWrsM3sMN[Polycasts^], etc.)

// end::session-4[]
== Polymer
[source,language="html",indent=0]
----
include::{polymer-src}[]
----


== Polymer Element Catalog
image::polymer-element-sets.png[]

== Polymer Element Catalog
https://elements.polymer-project.org/[demo^]

[NOTE.speaker]
--
Show polymer starter kit too
--

== Sample Application: Polymer with Java EE MVC 

demo
https://github.com/kito99/polymer-javaee-mvc-todo[(github)^]

[NOTE.speaker]
--
* Show overall application structure
* TodoApplication class
* LoginController - overall class
* LoginController - login-no-validation and logout
* login.jsp
* LoginController - login-validation, including LoginForm
* TaskController - make direct requests to show JSON responses
* TaskController - show getTaskPage()
* todo.xhtml
* mvc-tasks.xhtml
--


